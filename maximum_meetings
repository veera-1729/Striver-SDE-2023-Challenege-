import java.util.* ;
import java.io.*; 
public class Solution 
{
    public static List<Integer> maximumMeetings(int[] start, int[] end) 
    {        
        PriorityQueue<int[]> pq = new PriorityQueue<>((a,b) -> {
            if(a[1] !=b[1])
                return a[1]-b[1];
            return a[2]-b[2];
        });
        int v = 1;
        for(int i = 0 ; i < end.length ; i++)
        {
            pq.offer(new int[]{start[i],end[i],v++});
        }
        List<Integer> res = new ArrayList<>();
        int[] prev = new int[3];
        boolean first = true;
        while(!pq.isEmpty())
        {
            int[] curr = pq.poll();
            // System.out.println(Arrays.toString(curr));
            if(first)
            {
                first = false;
                prev  = curr;
                res.add(prev[2]);
            }
            else if(curr[0] > prev[1])
            {
                res.add(curr[2]);
                prev = curr;
            }
        }
        return res;
    }
}
